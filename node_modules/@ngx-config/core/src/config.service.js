import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ConfigLoader } from './config.loader';
var ConfigService = (function () {
    function ConfigService(loader) {
        this.loader = loader;
    }
    ConfigService.prototype.init = function () {
        var _this = this;
        return this.loader.loadSettings()
            .then(function (res) { return _this.settings = res; });
    };
    ConfigService.prototype.getSettings = function (key, defaultValue) {
        if (!key || (Array.isArray(key) && !key[0]))
            return this.settings;
        if (!Array.isArray(key))
            key = key.split('.');
        var result = key.reduce(function (acc, current) { return acc && acc[current]; }, this.settings);
        if (result === undefined) {
            result = defaultValue;
            if (result === undefined)
                throw new Error("No setting found with the specified key [" + key.join('/') + "]!");
        }
        return result;
    };
    return ConfigService;
}());
ConfigService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__metadata("design:paramtypes", [ConfigLoader])
], ConfigService);
export { ConfigService };
